<?phpclass ControllerInstallConfig extends Controller {	private $error = array();	public function index() {		$this->language->load('install/config');		if(isset($this->request->get['config_success'])){			$data['config_success'] = 1;		} else {			$data['config_success'] = 0;		}		if (($this->request->server['REQUEST_METHOD'] == 'POST') && $this->validate()) {			$output  = '<?php' . "\n";			$output .= '// HTTP' . "\n";			$output .= 'define(\'HTTP_SERVER\', \'' . HTTP_HTHUNG . '\');' . "\n\n";			$output .= '// HTTPS' . "\n";			$output .= 'define(\'HTTPS_SERVER\', \'' . HTTP_HTHUNG . '\');' . "\n\n";			$output .= '// DIR' . "\n";			$output .= 'define(\'DIR_APPLICATION\', \'' . DIR_HTHUNG . 'catalog/\');' . "\n";			$output .= 'define(\'DIR_SYSTEM\', \'' . DIR_HTHUNG . 'system/\');' . "\n";			$output .= 'define(\'DIR_IMAGE\', \'' . DIR_HTHUNG . 'image/\');' . "\n";			$output .= 'define(\'DIR_LANGUAGE\', \'' . DIR_HTHUNG . 'catalog/language/\');' . "\n";			$output .= 'define(\'DIR_TEMPLATE\', \'' . DIR_HTHUNG . 'catalog/view/theme/\');' . "\n";			$output .= 'define(\'DIR_CONFIG\', \'' . DIR_HTHUNG . 'system/config/\');' . "\n";			$output .= 'define(\'DIR_CACHE\', \'' . DIR_HTHUNG . 'system/storage/cache/\');' . "\n";			$output .= 'define(\'DIR_DOWNLOAD\', \'' . DIR_HTHUNG . 'system/storage/download/\');' . "\n";			$output .= 'define(\'DIR_LOGS\', \'' . DIR_HTHUNG . 'system/storage/logs/\');' . "\n";			$output .= 'define(\'DIR_MODIFICATION\', \'' . DIR_HTHUNG . 'system/storage/modification/\');' . "\n";			$output .= 'define(\'DIR_UPLOAD\', \'' . DIR_HTHUNG . 'system/storage/upload/\');' . "\n\n";			$file = fopen(DIR_HTHUNG . 'config/config-catalog.php', 'w');			fwrite($file, $output);			fclose($file);			$output  = '<?php' . "\n";			$output .= '// HTTP' . "\n";			$output .= 'define(\'HTTP_SERVER\', \'' . HTTP_HTHUNG . 'admin/\');' . "\n";			$output .= 'define(\'HTTP_CATALOG\', \'' . HTTP_HTHUNG . '\');' . "\n\n";			$output .= '// HTTPS' . "\n";			$output .= 'define(\'HTTPS_SERVER\', \'' . HTTP_HTHUNG . 'admin/\');' . "\n";			$output .= 'define(\'HTTPS_CATALOG\', \'' . HTTP_HTHUNG . '\');' . "\n\n";			$output .= '// DIR' . "\n";			$output .= 'define(\'DIR_APPLICATION\', \'' . DIR_HTHUNG . 'admin/\');' . "\n";			$output .= 'define(\'DIR_SYSTEM\', \'' . DIR_HTHUNG . 'system/\');' . "\n";			$output .= 'define(\'DIR_IMAGE\', \'' . DIR_HTHUNG . 'image/\');' . "\n";			$output .= 'define(\'DIR_LANGUAGE\', \'' . DIR_HTHUNG . 'admin/language/\');' . "\n";			$output .= 'define(\'DIR_TEMPLATE\', \'' . DIR_HTHUNG . 'admin/view/template/\');' . "\n";			$output .= 'define(\'DIR_CONFIG\', \'' . DIR_HTHUNG . 'system/config/\');' . "\n";			$output .= 'define(\'DIR_CACHE\', \'' . DIR_HTHUNG . 'system/storage/cache/\');' . "\n";			$output .= 'define(\'DIR_DOWNLOAD\', \'' . DIR_HTHUNG . 'system/storage/download/\');' . "\n";			$output .= 'define(\'DIR_LOGS\', \'' . DIR_HTHUNG . 'system/storage/logs/\');' . "\n";			$output .= 'define(\'DIR_MODIFICATION\', \'' . DIR_HTHUNG . 'system/storage/modification/\');' . "\n";			$output .= 'define(\'DIR_UPLOAD\', \'' . DIR_HTHUNG . 'system/storage/upload/\');' . "\n";			$output .= 'define(\'DIR_CATALOG\', \'' . DIR_HTHUNG . 'catalog/\');' . "\n\n";			$file = fopen(DIR_HTHUNG . 'config/config-admin.php', 'w');			fwrite($file, $output);			fclose($file);			$output  = '<?php' . "\n";			$output .= '// DB' . "\n";			$output .= 'define(\'DB_DRIVER\', \'' . addslashes($this->request->post['db_driver']) . '\');' . "\n";			$output .= 'define(\'DB_HOSTNAME\', \'' . addslashes($this->request->post['db_hostname']) . '\');' . "\n";			$output .= 'define(\'DB_USERNAME\', \'' . addslashes($this->request->post['db_username']) . '\');' . "\n";			$output .= 'define(\'DB_PASSWORD\', \'' . addslashes(html_entity_decode($this->request->post['db_password'], ENT_QUOTES, 'UTF-8')) . '\');' . "\n";			$output .= 'define(\'DB_DATABASE\', \'' . addslashes($this->request->post['db_database']) . '\');' . "\n";			$output .= 'define(\'DB_PORT\', \'' . addslashes($this->request->post['db_port']) . '\');' . "\n";			$output .= 'define(\'DB_PREFIX\', \'' . addslashes($this->request->post['db_prefix']) . '\');' . "\n";			$file = fopen(DIR_HTHUNG . 'config/config-database.php', 'w');			fwrite($file, $output);			fclose($file);			$this->response->redirect($this->url->link('install/config&config_success=1'));		}		$this->document->setTitle($this->language->get('heading_title'));		$data['heading_title'] = $this->language->get('heading_title');		$data['text_step_3'] = $this->language->get('text_step_3');		$data['text_db_connection'] = $this->language->get('text_db_connection');		$data['text_mysqli'] = $this->language->get('text_mysqli');		$data['text_mpdo'] = $this->language->get('text_mpdo');		$data['text_pgsql'] = $this->language->get('text_pgsql');		$data['entry_db_driver'] = $this->language->get('entry_db_driver');		$data['entry_db_hostname'] = $this->language->get('entry_db_hostname');		$data['entry_db_username'] = $this->language->get('entry_db_username');		$data['entry_db_password'] = $this->language->get('entry_db_password');		$data['entry_db_database'] = $this->language->get('entry_db_database');		$data['entry_db_port'] = $this->language->get('entry_db_port');		$data['entry_db_prefix'] = $this->language->get('entry_db_prefix');		$data['button_config'] = $this->language->get('button_config');		if (isset($this->error['warning'])) {			$data['error_warning'] = $this->error['warning'];		} else {			$data['error_warning'] = '';		}		if (isset($this->error['db_hostname'])) {			$data['error_db_hostname'] = $this->error['db_hostname'];		} else {			$data['error_db_hostname'] = '';		}		if (isset($this->error['db_username'])) {			$data['error_db_username'] = $this->error['db_username'];		} else {			$data['error_db_username'] = '';		}		if (isset($this->error['db_database'])) {			$data['error_db_database'] = $this->error['db_database'];		} else {			$data['error_db_database'] = '';		}		if (isset($this->error['db_port'])) {			$data['error_db_port'] = $this->error['db_port'];		} else {			$data['error_db_port'] = '';		}		if (isset($this->error['db_prefix'])) {			$data['error_db_prefix'] = $this->error['db_prefix'];		} else {			$data['error_db_prefix'] = '';		}		if (isset($this->error['username'])) {			$data['error_username'] = $this->error['username'];		} else {			$data['error_username'] = '';		}		if (isset($this->error['password'])) {			$data['error_password'] = $this->error['password'];		} else {			$data['error_password'] = '';		}		if (isset($this->error['email'])) {			$data['error_email'] = $this->error['email'];		} else {			$data['error_email'] = '';		}		$data['action'] = $this->url->link('install/config');		if (isset($this->request->post['db_driver'])) {			$data['db_driver'] = $this->request->post['db_driver'];		} else {			$data['db_driver'] = '';		}		if (isset($this->request->post['db_hostname'])) {			$data['db_hostname'] = $this->request->post['db_hostname'];		} else {			$data['db_hostname'] = DB_HOSTNAME;		}		if (isset($this->request->post['db_username'])) {			$data['db_username'] = $this->request->post['db_username'];		} else {			$data['db_username'] = DB_USERNAME;		}		if (isset($this->request->post['db_password'])) {			$data['db_password'] = $this->request->post['db_password'];		} else {			$data['db_password'] = DB_PASSWORD;		}		if (isset($this->request->post['db_database'])) {			$data['db_database'] = $this->request->post['db_database'];		} else {			$data['db_database'] = DB_DATABASE;		}		if (isset($this->request->post['db_port'])) {			$data['db_port'] = $this->request->post['db_port'];		} else {			$data['db_port'] = DB_PORT;		}		if (isset($this->request->post['db_prefix'])) {			$data['db_prefix'] = $this->request->post['db_prefix'];		} else {			$data['db_prefix'] = DB_PREFIX;		}		if (isset($this->request->post['username'])) {			$data['username'] = $this->request->post['username'];		} else {			$data['username'] = 'admin';		}		if (isset($this->request->post['password'])) {			$data['password'] = $this->request->post['password'];		} else {			$data['password'] = '';		}		if (isset($this->request->post['email'])) {			$data['email'] = $this->request->post['email'];		} else {			$data['email'] = '';		}		$data['mysqli'] = extension_loaded('mysqli');		$data['mysql'] = extension_loaded('mysql');		$data['pdo'] = extension_loaded('pdo');		$data['pgsql'] = extension_loaded('pgsql');		$data['footer'] = $this->load->controller('common/footer');		$data['header'] = $this->load->controller('common/header');		$this->response->setOutput($this->load->view('install/config', $data));	}	private function validate() {		if (!$this->request->post['db_hostname']) {			$this->error['db_hostname'] = $this->language->get('error_db_hostname');		}		if (!$this->request->post['db_username']) {			$this->error['db_username'] = $this->language->get('error_db_username');		}		if (!$this->request->post['db_database']) {			$this->error['db_database'] = $this->language->get('error_db_database');		}		if (!$this->request->post['db_port']) {			$this->error['db_port'] = $this->language->get('error_db_port');		}		if ($this->request->post['db_prefix'] && preg_match('/[^a-z0-9_]/', $this->request->post['db_prefix'])) {			$this->error['db_prefix'] = $this->language->get('error_db_prefix');		}		if ($this->request->post['db_driver'] == 'mysqli') {			$mysql = @new MySQLi($this->request->post['db_hostname'], $this->request->post['db_username'], html_entity_decode($this->request->post['db_password'], ENT_QUOTES, 'UTF-8'), $this->request->post['db_database'], $this->request->post['db_port']);			if ($mysql->connect_error) {				$this->error['warning'] = $mysql->connect_error;			} else {				$mysql->close();			}		} elseif ($this->request->post['db_driver'] == 'mpdo') {			try {				new \DB\mPDO($this->request->post['db_hostname'], $this->request->post['db_username'], $this->request->post['db_password'], $this->request->post['db_database'], $this->request->post['db_port']);			} catch(Exception $e) {				$this->error['warning'] = $e->getMessage();			}		}		if (!is_writable(DIR_HTHUNG . 'config/config-catalog.php')) {			$this->error['warning'] = $this->language->get('error_config') . DIR_HTHUNG . 'config/config-catalog.php!';		}		if (!is_writable(DIR_HTHUNG . 'config/config-admin.php')) {			$this->error['warning'] = $this->language->get('error_config') . DIR_HTHUNG . 'config/config-admin.php!';		}		if (!is_writable(DIR_HTHUNG . 'config/config-database.php')) {			$this->error['warning'] = $this->language->get('error_config') . DIR_HTHUNG . 'config/config-database.php!';		}		return !$this->error;	}}