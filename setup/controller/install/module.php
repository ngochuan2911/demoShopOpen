<?phpclass ControllerInstallModule extends Controller {	public function index() {		$this->language->load('install/module');		$data['text_success'] = false;		if(isset($this->request->get['delete_success'])){			$data['text_success'] = 'Delete success!';		}		if(isset($this->request->get['zip_success'])){			$data['text_success'] = 'Zip success!';		}		if(isset($this->request->get['uninstall_success'])){			$data['text_success'] = 'Uninstall success!';		}		$this->document->setTitle($this->language->get('heading_title'));		$data['heading_title'] = $this->language->get('heading_title');				$data['text_status'] = $this->language->get('text_status');		$data['text_extension'] = $this->language->get('text_extension');		$data['text_action'] = $this->language->get('text_action');		$data['text_confirm'] = $this->language->get('text_confirm');		$data['error_connect_host'] = 0;		if($this->checkHost()){			$database = array(				'db_driver' =>   DB_DRIVER,				'db_hostname' => DB_HOSTNAME,				'db_username' => DB_USERNAME,				'db_password' => DB_PASSWORD,				'db_database' => DB_DATABASE,				'db_port' =>     DB_PORT			);			$this->load->model('extension/extension');			$extensions = $this->model_extension_extension->getExtensions('module', $database);			$extensions_code = array();			if(!empty($extensions)) foreach($extensions as $extension){				$extensions_code[] = $extension['code'];			}			$data['extensions'] = array();			$files = glob(DIR_ADMIN . 'controller/module/*.php');			if($files) {				foreach ($files as $file) {					$extension = basename($file, '.php');					$this->language->load('module/' . $extension);					$action = array();					$action[] = array(						'text' => 'Zip',						'href' => $this->url->link('install/module/zip&extension=' . $extension),						'confirm' => 0					);					if(!in_array($extension, $extensions_code)) {						$action[] = array(							'text' => 'Delete',							'href' => $this->url->link('install/module/delete&extension=' . $extension),							'confirm' => 1						);					} else {						$action[] = array(							'text' => 'Uninstall',							'href' => $this->url->link('install/module/uninstall&extension=' . $extension),							'confirm' => 1						);					}					$data['extensions'][] = array(						'status'    => !in_array($extension, $extensions_code) ? false : true,						'extension' => $extension,						'action'    => $action					);				}			}		} else {			$data['error_connect_host'] = 1;		}		$data['footer'] = $this->load->controller('common/footer');		$data['header'] = $this->load->controller('common/header');		$this->response->setOutput($this->load->view('install/module', $data));	}	public function uninstall() {		$this->load->language('extension/module');		$this->document->setTitle($this->language->get('heading_title'));		$this->load->model('extension/extension');		$this->load->model('extension/module');		$database = array(			'db_driver' =>   DB_DRIVER,			'db_hostname' => DB_HOSTNAME,			'db_username' => DB_USERNAME,			'db_password' => DB_PASSWORD,			'db_database' => DB_DATABASE,			'db_port' =>     DB_PORT		);		$this->model_extension_extension->uninstall('module', $this->request->get['extension'], $database);		$this->model_extension_module->deleteModulesByCode($this->request->get['extension'], $database);		$this->response->redirect($this->url->link('install/module&uninstall_success=1'));	}	public function delete(){		$extension = $this->request->get['extension'];		$dir_admin_controller = '../admin/controller/module/';		$dir_admin_language_english = '../admin/language/en-gb/module/';		$dir_admin_language_vietnamese = '../admin/language/vn-gb/module/';		$dir_admin_view = '../admin/view/template/module/';		$dir_catalog = '../catalog/controller/module/';		$dir_catalog_language_english = '../catalog/language/en-gb/module/';		$dir_catalog_language_vietnamese = '../catalog/language/vn-gb/module/';		$dir_catalog_view = '../catalog/view/theme/default/template/module/';		$dir_info = '../system/module/';		$deletes = array(			$dir_admin_controller . $extension . '.php',			$dir_admin_language_english . $extension . '.php',			$dir_admin_language_vietnamese . $extension . '.php',			$dir_admin_view . $extension . '.tpl',			$dir_catalog . $extension . '.php',			$dir_catalog_language_english . $extension . '.php',			$dir_catalog_language_vietnamese . $extension . '.php',			$dir_catalog_view . $extension . '.tpl',			$dir_info . $extension . '.xml'		);		if(!empty($deletes)) foreach ($deletes as $delete){			if (file_exists($delete)) {				unlink($delete);			}		}		$this->response->redirect($this->url->link('install/module&delete_success=1'));	}	public function zip(){		$extension = $this->request->get['extension'];		$dir_admin_controller = '../admin/controller/module/';		$dir_admin_language_english = '../admin/language/en-gb/module/';		$dir_admin_language_vietnamese = '../admin/language/vn-gb/module/';		$dir_admin_view = '../admin/view/template/module/';		$dir_catalog = '../catalog/controller/module/';		$dir_catalog_language_english = '../catalog/language/en-gb/module/';		$dir_catalog_language_vietnamese = '../catalog/language/vn-gb/module/';		$dir_catalog_view = '../catalog/view/theme/default/template/module/';		$dir_info = '../system/module/';		$backup = array(			$dir_admin_controller . $extension . '.php',			$dir_admin_language_english . $extension . '.php',			$dir_admin_language_vietnamese . $extension . '.php',			$dir_admin_view . $extension . '.tpl',			$dir_catalog . $extension . '.php',			$dir_catalog_language_english . $extension . '.php',			$dir_catalog_language_vietnamese . $extension . '.php',			$dir_catalog_view . $extension . '.tpl',			$dir_info . $extension . '.xml'		);		$this->create_zip($backup, 'zip/' . $extension . '.zip');		$this->response->redirect($this->url->link('install/module&zip_success=1'));	}	public function create_zip($files, $direction) {		$zipname = $direction;		$zip = new ZipArchive();		$zip->open($zipname, ZIPARCHIVE::CREATE);		foreach ($files as $filename) {			if(file_exists($filename)) {				$zip->addFile($filename, $filename);			}		}		$zip->close();	}	private function checkHost() {		$error = 0;		if(!file_exists(DIR_HTHUNG . 'config/config-database.php')) {			$this->error['warning'] = 'Error: File config database.php not exists!';		} else {			if(DB_DRIVER == 'mysqli') {				if(function_exists('mysqli_connect')) {					$mysqli = @mysqli_connect(DB_HOSTNAME, DB_USERNAME, DB_PASSWORD, DB_DATABASE);					if(!$mysqli) {						$error = 1;					} else {						mysqli_close($mysqli);					}				} else {					$error = 0;				}			}		}		if($error == 0) {			return true;		} else {			return false;		}	}}